{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neeraj\\\\OneDrive\\\\Documents\\\\order management\\\\oms\\\\src\\\\components\\\\TableC\\\\TableC.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useTable, useFilters, useSortBy, usePagination } from 'react-table';\nimport { Container, Table, Input, Button } from 'reactstrap';\nimport { STATES } from '../../assets/Json/data';\nimport './TableC.css';\nimport { faLongArrowAltDown, faLongArrowAltUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TableC = ({\n  columns,\n  data,\n  heading\n}) => {\n  _s();\n\n  const {\n    getTableProps,\n    // table props from react-table\n    getTableBodyProps,\n    // table body props from react-table\n    headerGroups,\n    // headerGroups, if your table has groupings\n    page,\n    // rows for the table based on the data passed\n    nextPage,\n    previousPage,\n    prepareRow,\n    // Prepare the row (this function needs to be called for each row before getting the row props)\n    setFilter // The useFilter Hook provides a way to set the filter\n\n  } = useTable({\n    columns,\n    data\n  }, useFilters, useSortBy, usePagination);\n  const [filterInput, setFilterInput] = useState(''); // Update the state when input changes\n\n  const handleFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter('name', value); // Update the show.name filter. Now our table will filter and show only the rows which have a matching value\n\n    setFilterInput(value);\n  };\n\n  const handleSelectFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter('state', value); // Update the show.name filter. Now our table will filter and show only the rows which have a matching value\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"pt-4 pb-5\",\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: filterInput,\n      onChange: handleFilterChange,\n      placeholder: 'Search name'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"select\",\n      name: \"select\",\n      onChange: e => handleSelectFilterChange(e),\n      id: \"exampleSelect\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), STATES.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: data,\n          children: data\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      ...getTableProps,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-5\",\n              children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faLongArrowAltDown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faLongArrowAltUp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 25\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: page.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this);\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        previousPage();\n      },\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        nextPage();\n      },\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableC, \"+iyTGmJaZcYw/5OlLgKcv9+MrSA=\", false, function () {\n  return [useTable];\n});\n\n_c = TableC;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableC\");","map":{"version":3,"sources":["C:/Users/Neeraj/OneDrive/Documents/order management/oms/src/components/TableC/TableC.js"],"names":["React","useState","useTable","useFilters","useSortBy","usePagination","Container","Table","Input","Button","STATES","faLongArrowAltDown","faLongArrowAltUp","FontAwesomeIcon","TableC","columns","data","heading","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","prepareRow","setFilter","filterInput","setFilterInput","handleFilterChange","e","value","target","undefined","handleSelectFilterChange","map","index","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useTable, useFilters, useSortBy, usePagination } from 'react-table';\r\nimport { Container, Table, Input, Button } from 'reactstrap';\r\nimport { STATES } from '../../assets/Json/data';\r\nimport './TableC.css';\r\nimport {\r\n  faLongArrowAltDown,\r\n  faLongArrowAltUp,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nexport const TableC = ({ columns, data, heading }) => {\r\n  const {\r\n    getTableProps, // table props from react-table\r\n    getTableBodyProps, // table body props from react-table\r\n    headerGroups, // headerGroups, if your table has groupings\r\n    page, // rows for the table based on the data passed\r\n    nextPage,\r\n    previousPage,\r\n    prepareRow, // Prepare the row (this function needs to be called for each row before getting the row props)\r\n    setFilter, // The useFilter Hook provides a way to set the filter\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const [filterInput, setFilterInput] = useState('');\r\n\r\n  // Update the state when input changes\r\n  const handleFilterChange = (e) => {\r\n    const value = e.target.value || undefined;\r\n    setFilter('name', value); // Update the show.name filter. Now our table will filter and show only the rows which have a matching value\r\n    setFilterInput(value);\r\n  };\r\n  const handleSelectFilterChange = (e) => {\r\n    const value = e.target.value || undefined;\r\n    setFilter('state', value); // Update the show.name filter. Now our table will filter and show only the rows which have a matching value\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h4 className='pt-4 pb-5'>{heading}</h4>\r\n      <Input\r\n        value={filterInput}\r\n        onChange={handleFilterChange}\r\n        placeholder={'Search name'}\r\n      />\r\n      <Input\r\n        type='select'\r\n        name='select'\r\n        onChange={(e) => handleSelectFilterChange(e)}\r\n        id='exampleSelect'>\r\n        <option value=''>All</option>\r\n        {STATES.map((data, index) => {\r\n          return (\r\n            <option value={data} key={index}>\r\n              {data}\r\n            </option>\r\n          );\r\n        })}\r\n      </Input>\r\n      <Table bordered {...getTableProps}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render('Header')}\r\n                  <span className='ml-5'>\r\n                    {column.isSorted ? (\r\n                      column.isSortedDesc ? (\r\n                        <FontAwesomeIcon icon={faLongArrowAltDown} />\r\n                      ) : (\r\n                        <FontAwesomeIcon icon={faLongArrowAltUp} />\r\n                      )\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr key={i} {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <Button\r\n        onClick={() => {\r\n          previousPage();\r\n        }}>\r\n        Previous\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          nextPage();\r\n        }}>\r\n        Next\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
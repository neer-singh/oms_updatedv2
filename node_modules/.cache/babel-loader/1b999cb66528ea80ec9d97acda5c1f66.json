{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neeraj\\\\OneDrive\\\\Documents\\\\order management\\\\oms\\\\src\\\\components\\\\Table\\\\TableC.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useTable, useFilters, useSortBy, usePagination } from 'react-table';\nimport { Container, Table, Input, Button, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport './TableC.css';\nimport { faLongArrowAltDown, faLongArrowAltUp, faPlus, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TableC = ({\n  columns,\n  data,\n  heading,\n  searchTitle,\n  searchPlaceHolder,\n  dropdownList,\n  bordered,\n  filter,\n  dropfilter\n}) => {\n  _s();\n\n  const {\n    getTableProps,\n    // table props from react-table\n    getTableBodyProps,\n    // table body props from react-table\n    headerGroups,\n    // headerGroups, if your table has groupings\n    page,\n    // rows for the table based on the data passed\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    state,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    prepareRow,\n    // Prepare the row (this function needs to be called for each row before getting the row props)\n    setFilter // The useFilter Hook provides a way to set the filter\n\n  } = useTable({\n    columns,\n    data\n  }, useFilters, useSortBy, usePagination);\n  const [createModel, setcreateModel] = useState(false);\n  const [filterInput, setFilterInput] = useState(''); // Update the state when input changes\n\n  const handleFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter(filter, value); // Update the show.name filter. Now our table will filter and show only the rows which have a matching value\n\n    setFilterInput(value);\n  };\n\n  const handleSelectFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter(dropfilter, value); // Update the show.name filter. Now our table will filter and show only the rows which have a matching value\n  };\n\n  const {\n    pageIndex,\n    pageSize\n  } = state;\n\n  const toggle = () => setcreateModel(!createModel);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"pt-4 pb-5\",\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex w-100 ml-3  mb-3 filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column mr-3 w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: searchTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            size: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              value: filterInput,\n              onChange: handleFilterChange,\n              placeholder: searchPlaceHolder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n              addonType: \"append\",\n              children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  className: \"icon\",\n                  icon: faSearch\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column mr-3 w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            size: \"sm\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: \"select\",\n              onChange: e => handleSelectFilterChange(e),\n              id: \"exampleSelect\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), dropdownList.map((data, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: data,\n                  children: data\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex text-right justify-content-end \",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"text-right\",\n          size: \"sm\",\n          onClick: toggle,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"mr-1\",\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), \" Create New\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: createModel,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"Modal title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: toggle,\n          children: \"Do Something\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: toggle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bordered: bordered,\n      ...getTableProps,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"\",\n              children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faLongArrowAltDown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faLongArrowAltUp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 25\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: page.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center align-middle\",\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this);\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex mb-3 justify-content-end align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \" d-flex align-items-center\",\n        children: [\"| Go to page:\", ' ', /*#__PURE__*/_jsxDEV(Input, {\n          className: \"pageInput mx-1\",\n          type: \"number\",\n          defaultValue: pageIndex + 1,\n          onChange: e => {\n            const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(pageNumber);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"w-auto\",\n        type: \"select\",\n        value: pageSize,\n        onChange: e => {\n          setPageSize(Number(e.target.value));\n        },\n        children: [10, 25, 50].map((pageSize, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pageSize,\n          children: [\"Show \", pageSize]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"p-1 mx-1\",\n        onClick: () => {\n          gotoPage(0);\n        },\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"p-1 mx-1\",\n        onClick: () => {\n          previousPage();\n        },\n        disabled: !canPreviousPage,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"p-1 mx-1\",\n        onClick: () => {\n          nextPage();\n        },\n        disabled: !canNextPage,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"p-1 mx-1\",\n        onClick: () => {\n          gotoPage(pageCount - 1);\n        },\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableC, \"wImiSr0RmkA8bPUsEE1vRkjyCUE=\", false, function () {\n  return [useTable];\n});\n\n_c = TableC;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableC\");","map":{"version":3,"sources":["C:/Users/Neeraj/OneDrive/Documents/order management/oms/src/components/Table/TableC.js"],"names":["React","useState","useTable","useFilters","useSortBy","usePagination","Container","Table","Input","Button","InputGroup","InputGroupAddon","InputGroupText","faLongArrowAltDown","faLongArrowAltUp","faPlus","faSearch","FontAwesomeIcon","TableC","columns","data","heading","searchTitle","searchPlaceHolder","dropdownList","bordered","filter","dropfilter","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","state","gotoPage","pageCount","setPageSize","prepareRow","setFilter","createModel","setcreateModel","filterInput","setFilterInput","handleFilterChange","e","value","target","undefined","handleSelectFilterChange","pageIndex","pageSize","toggle","map","index","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","length","pageNumber","Number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useTable, useFilters, useSortBy, usePagination } from 'react-table';\r\nimport {\r\n  Container,\r\n  Table,\r\n  Input,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n} from 'reactstrap';\r\nimport './TableC.css';\r\nimport {\r\n  faLongArrowAltDown,\r\n  faLongArrowAltUp,\r\n  faPlus,\r\n  faSearch,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nexport const TableC = ({\r\n  columns,\r\n  data,\r\n  heading,\r\n  searchTitle,\r\n  searchPlaceHolder,\r\n  dropdownList,\r\n  bordered,\r\n  filter,\r\n  dropfilter,\r\n}) => {\r\n  const {\r\n    getTableProps, // table props from react-table\r\n    getTableBodyProps, // table body props from react-table\r\n    headerGroups, // headerGroups, if your table has groupings\r\n    page, // rows for the table based on the data passed\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    state,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    prepareRow, // Prepare the row (this function needs to be called for each row before getting the row props)\r\n    setFilter, // The useFilter Hook provides a way to set the filter\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n  const [createModel, setcreateModel] = useState(false);\r\n  const [filterInput, setFilterInput] = useState('');\r\n\r\n  // Update the state when input changes\r\n  const handleFilterChange = (e) => {\r\n    const value = e.target.value || undefined;\r\n    setFilter(filter, value); // Update the show.name filter. Now our table will filter and show only the rows which have a matching value\r\n    setFilterInput(value);\r\n  };\r\n  const handleSelectFilterChange = (e) => {\r\n    const value = e.target.value || undefined;\r\n    setFilter(dropfilter, value); // Update the show.name filter. Now our table will filter and show only the rows which have a matching value\r\n  };\r\n  const { pageIndex, pageSize } = state;\r\n  const toggle = () => setcreateModel(!createModel);\r\n  return (\r\n    <Container>\r\n      <h4 className='pt-4 pb-5'>{heading}</h4>\r\n      <div className='d-flex align-items-center justify-content-between'>\r\n        <div className='d-flex w-100 ml-3  mb-3 filters'>\r\n          <div className='d-flex flex-column mr-3 w-100'>\r\n            <span>{searchTitle}</span>\r\n            <InputGroup size='sm'>\r\n              <Input\r\n                value={filterInput}\r\n                onChange={handleFilterChange}\r\n                placeholder={searchPlaceHolder}\r\n              />\r\n              <InputGroupAddon addonType='append'>\r\n                <InputGroupText>\r\n                  <FontAwesomeIcon className='icon' icon={faSearch} />\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n          </div>\r\n          <div className='d-flex flex-column mr-3 w-100'>\r\n            <span>State</span>\r\n            <InputGroup size='sm'>\r\n              <Input\r\n                type='select'\r\n                name='select'\r\n                onChange={(e) => handleSelectFilterChange(e)}\r\n                id='exampleSelect'>\r\n                <option value=''>All</option>\r\n                {dropdownList.map((data, index) => {\r\n                  return (\r\n                    <option value={data} key={index}>\r\n                      {data}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Input>\r\n            </InputGroup>\r\n          </div>\r\n        </div>\r\n        <div className='d-flex text-right justify-content-end '>\r\n          <Button className='text-right' size='sm' onClick={toggle}>\r\n            <FontAwesomeIcon className='mr-1' icon={faPlus} /> Create New\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Modal isOpen={createModel} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n        <ModalBody>\r\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\r\n          culpa qui officia deserunt mollit anim id est laborum.\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color='primary' onClick={toggle}>\r\n            Do Something\r\n          </Button>{' '}\r\n          <Button color='secondary' onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <Table bordered={bordered} {...getTableProps}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render('Header')}\r\n                  <span className=''>\r\n                    {column.isSorted ? (\r\n                      column.isSortedDesc ? (\r\n                        <FontAwesomeIcon icon={faLongArrowAltDown} />\r\n                      ) : (\r\n                        <FontAwesomeIcon icon={faLongArrowAltUp} />\r\n                      )\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr key={i} {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td\r\n                      className='text-center align-middle'\r\n                      {...cell.getCellProps()}>\r\n                      {cell.render('Cell')}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <div className='d-flex mb-3 justify-content-end align-items-center'>\r\n        <span>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span className=' d-flex align-items-center'>\r\n          | Go to page:{' '}\r\n          <Input\r\n            className='pageInput mx-1'\r\n            type='number'\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}></Input>\r\n        </span>\r\n        <Input\r\n          className='w-auto'\r\n          type='select'\r\n          value={pageSize}\r\n          onChange={(e) => {\r\n            setPageSize(Number(e.target.value));\r\n          }}>\r\n          {[10, 25, 50].map((pageSize, index) => (\r\n            <option key={index} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </Input>\r\n        <Button\r\n          className='p-1 mx-1'\r\n          onClick={() => {\r\n            gotoPage(0);\r\n          }}\r\n          disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </Button>\r\n\r\n        <Button\r\n          className='p-1 mx-1'\r\n          onClick={() => {\r\n            previousPage();\r\n          }}\r\n          disabled={!canPreviousPage}>\r\n          Previous\r\n        </Button>\r\n        <Button\r\n          className='p-1 mx-1'\r\n          onClick={() => {\r\n            nextPage();\r\n          }}\r\n          disabled={!canNextPage}>\r\n          Next\r\n        </Button>\r\n        <Button\r\n          className='p-1 mx-1'\r\n          onClick={() => {\r\n            gotoPage(pageCount - 1);\r\n          }}\r\n          disabled={!canNextPage}>\r\n          {'>>'}\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
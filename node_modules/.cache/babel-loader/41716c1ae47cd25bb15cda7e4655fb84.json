{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neeraj\\\\OneDrive\\\\Documents\\\\order management\\\\oms\\\\src\\\\Pages\\\\Distributor Order\\\\DistributorOrder.jsx\",\n    _s = $RefreshSig$();\n\nimport { format, parseISO } from 'date-fns';\nimport React, { useMemo } from 'react';\nimport { useFilters, usePagination, useSortBy, useTable } from 'react-table';\nimport { Container, Input, InputGroup } from 'reactstrap';\nimport { ORDER, ORDER_COLUMN } from '../../assets/Json/ORDER';\nimport TableTax from '../../components/Table/TableTax';\nimport '../../components/Table/TableTax.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DistributorOrder = () => {\n  _s();\n\n  const columns = useMemo(() => ORDER_COLUMN, []);\n  const data = useMemo(() => ORDER, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    state,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    prepareRow,\n    setFilter\n  } = useTable({\n    columns,\n    data\n  }, useFilters, useSortBy, usePagination);\n  const {\n    pageIndex,\n    pageSize\n  } = state;\n\n  const handleStateChange = (e, prop) => {\n    const value = e.target.value || undefined;\n    setFilter(prop, value); // Update the show.name filter. Now our table will filter and show only the rows which have a matching value\n  }; // Update the state when input changes\n\n\n  const states = [...new Set(ORDER.map(x => x.state))];\n  const cities = [...new Set(ORDER.map(x => x.city))];\n\n  const dateFormat = e => {\n    format(parseISO(e.target.value), 'dd,MM,yyyy');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"pt-4 pb-5\",\n      children: \"Ditributor's Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex w-60 ml-3  mb-3 filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column mr-3 w-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          size: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"select\",\n            name: \"select\",\n            onChange: e => handleStateChange(e, 'state'),\n            id: \"exampleSelect\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), states.map((data, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: data,\n                children: data\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column mr-3 w-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          size: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"select\",\n            name: \"select\",\n            onChange: e => handleStateChange(e, 'city'),\n            id: \"exampleSelect\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), cities.map((data, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: data,\n                children: data\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column mr-3 w-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          size: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"date\",\n            name: \"date\",\n            onChange: e => dateFormat(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableTax, {\n      columns: columns,\n      data: data,\n      getTableProps: getTableProps,\n      getTableBodyProps: getTableBodyProps,\n      headerGroups: headerGroups,\n      page: page,\n      nextPage: nextPage,\n      previousPage: previousPage,\n      canNextPage: canNextPage,\n      canPreviousPage: canPreviousPage,\n      pageOptions: pageOptions,\n      state: state,\n      gotoPage: gotoPage,\n      pageCount: pageCount,\n      setPageSize: setPageSize,\n      prepareRow: prepareRow,\n      setFilter: setFilter,\n      pageIndex: pageIndex,\n      pageSize: pageSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DistributorOrder, \"9aAc40gCupzBl4k/IO7OxcbDNcw=\", false, function () {\n  return [useTable];\n});\n\n_c = DistributorOrder;\nexport default DistributorOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistributorOrder\");","map":{"version":3,"sources":["C:/Users/Neeraj/OneDrive/Documents/order management/oms/src/Pages/Distributor Order/DistributorOrder.jsx"],"names":["format","parseISO","React","useMemo","useFilters","usePagination","useSortBy","useTable","Container","Input","InputGroup","ORDER","ORDER_COLUMN","TableTax","DistributorOrder","columns","data","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","state","gotoPage","pageCount","setPageSize","prepareRow","setFilter","pageIndex","pageSize","handleStateChange","e","prop","value","target","undefined","states","Set","map","x","cities","city","dateFormat","index"],"mappings":"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","sourcesContent":["import { format, parseISO } from 'date-fns';\r\nimport React, { useMemo } from 'react';\r\nimport { useFilters, usePagination, useSortBy, useTable } from 'react-table';\r\nimport { Container, Input, InputGroup } from 'reactstrap';\r\nimport { ORDER, ORDER_COLUMN } from '../../assets/Json/ORDER';\r\nimport TableTax from '../../components/Table/TableTax';\r\nimport '../../components/Table/TableTax.css';\r\nconst DistributorOrder = () => {\r\n  const columns = useMemo(() => ORDER_COLUMN, []);\r\n  const data = useMemo(() => ORDER, []);\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    state,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    prepareRow,\r\n    setFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n  const { pageIndex, pageSize } = state;\r\n  const handleStateChange = (e, prop) => {\r\n    const value = e.target.value || undefined;\r\n    setFilter(prop, value); // Update the show.name filter. Now our table will filter and show only the rows which have a matching value\r\n  };\r\n  // Update the state when input changes\r\n\r\n  const states = [...new Set(ORDER.map((x) => x.state))];\r\n  const cities = [...new Set(ORDER.map((x) => x.city))];\r\n  const dateFormat = (e) => {\r\n    format(parseISO(e.target.value), 'dd,MM,yyyy');\r\n  };\r\n  return (\r\n    <Container>\r\n      <h4 className='pt-4 pb-5'>Ditributor's Order</h4>\r\n      <div className='d-flex w-60 ml-3  mb-3 filters'>\r\n        <div className='d-flex flex-column mr-3 w-100'>\r\n          <span>State</span>\r\n          <InputGroup size='sm'>\r\n            <Input\r\n              type='select'\r\n              name='select'\r\n              onChange={(e) => handleStateChange(e, 'state')}\r\n              id='exampleSelect'>\r\n              <option value=''>All</option>\r\n              {states.map((data, index) => {\r\n                return (\r\n                  <option value={data} key={index}>\r\n                    {data}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Input>\r\n          </InputGroup>\r\n        </div>\r\n        <div className='d-flex flex-column mr-3 w-100'>\r\n          <span>City</span>\r\n          <InputGroup size='sm'>\r\n            <Input\r\n              type='select'\r\n              name='select'\r\n              onChange={(e) => handleStateChange(e, 'city')}\r\n              id='exampleSelect'>\r\n              <option value=''>All</option>\r\n              {cities.map((data, index) => {\r\n                return (\r\n                  <option value={data} key={index}>\r\n                    {data}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Input>\r\n          </InputGroup>\r\n        </div>\r\n        <div className='d-flex flex-column mr-3 w-100'>\r\n          <span>Date</span>\r\n          <InputGroup size='sm'>\r\n            <Input type='date' name='date' onChange={(e) => dateFormat(e)} />\r\n          </InputGroup>\r\n        </div>\r\n      </div>\r\n\r\n      <TableTax\r\n        columns={columns}\r\n        data={data}\r\n        getTableProps={getTableProps}\r\n        getTableBodyProps={getTableBodyProps}\r\n        headerGroups={headerGroups}\r\n        page={page}\r\n        nextPage={nextPage}\r\n        previousPage={previousPage}\r\n        canNextPage={canNextPage}\r\n        canPreviousPage={canPreviousPage}\r\n        pageOptions={pageOptions}\r\n        state={state}\r\n        gotoPage={gotoPage}\r\n        pageCount={pageCount}\r\n        setPageSize={setPageSize}\r\n        prepareRow={prepareRow}\r\n        setFilter={setFilter}\r\n        pageIndex={pageIndex}\r\n        pageSize={pageSize}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DistributorOrder;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neeraj\\\\OneDrive\\\\Documents\\\\order management\\\\oms\\\\src\\\\Pages\\\\Tax\\\\Tax.jsx\",\n    _s = $RefreshSig$();\n\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useMemo, useState } from 'react';\nimport { useFilters, useTable } from 'react-table';\nimport { Container, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { TAX, TAX_COLUMN } from '../../assets/Json/TAX';\nimport TableTax from '../../components/Table/TableTax';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tax = () => {\n  _s();\n\n  const columns = useMemo(() => TAX_COLUMN, []);\n  const data = useMemo(() => TAX, []);\n  const [transition, settransition] = useState(false);\n  const [filterInput, setFilterInput] = useState('');\n  const {\n    // Prepare the row (this function needs to be called for each row before getting the row props)\n    setFilter // The useFilter Hook provides a way to set the filter\n\n  } = useTable({\n    columns,\n    data\n  }, useFilters);\n\n  const handleSelectFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter('state', value); // Update the show.name filter. Now our table will filter and show only the rows which have a matching value\n  }; // Update the state when input changes\n\n\n  const handleFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter('code', value); // Update the show.name filter. Now our table will filter and show only the rows which have a matching value\n\n    setFilterInput(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"pt-4 pb-5\",\n      children: \"\\\"Tax\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex w-60 ml-3  mb-3 filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column mr-3 w-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"HSN Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            value: filterInput,\n            onChange: handleFilterChange,\n            placeholder: \"Search by HSN Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n            addonType: \"append\",\n            children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"icon\",\n                icon: faSearch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column mr-3 w-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          size: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"select\",\n            name: \"select\",\n            onChange: e => handleSelectFilterChange(e),\n            id: \"exampleSelect\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), ['Transition Value', 'Per-Unit'].map((data, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: data,\n                children: data\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableTax, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tax, \"0s5rLWzn/1Ds6dQ3NOZ3ksfi/ZY=\", false, function () {\n  return [useTable];\n});\n\n_c = Tax;\nexport default Tax;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tax\");","map":{"version":3,"sources":["C:/Users/Neeraj/OneDrive/Documents/order management/oms/src/Pages/Tax/Tax.jsx"],"names":["faSearch","FontAwesomeIcon","React","useMemo","useState","useFilters","useTable","Container","Input","InputGroup","InputGroupAddon","InputGroupText","TAX","TAX_COLUMN","TableTax","Tax","columns","data","transition","settransition","filterInput","setFilterInput","setFilter","handleSelectFilterChange","e","value","target","undefined","handleFilterChange","map","index"],"mappings":"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","sourcesContent":["import { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useMemo, useState } from 'react';\r\nimport { useFilters, useTable } from 'react-table';\r\nimport {\r\n  Container,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n} from 'reactstrap';\r\nimport { TAX, TAX_COLUMN } from '../../assets/Json/TAX';\r\nimport TableTax from '../../components/Table/TableTax';\r\n\r\nconst Tax = () => {\r\n  const columns = useMemo(() => TAX_COLUMN, []);\r\n  const data = useMemo(() => TAX, []);\r\n  const [transition, settransition] = useState(false);\r\n  const [filterInput, setFilterInput] = useState('');\r\n  const {\r\n    // Prepare the row (this function needs to be called for each row before getting the row props)\r\n    setFilter, // The useFilter Hook provides a way to set the filter\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useFilters\r\n  );\r\n\r\n  const handleSelectFilterChange = (e) => {\r\n    const value = e.target.value || undefined;\r\n    setFilter('state', value); // Update the show.name filter. Now our table will filter and show only the rows which have a matching value\r\n  };\r\n  // Update the state when input changes\r\n  const handleFilterChange = (e) => {\r\n    const value = e.target.value || undefined;\r\n    setFilter('code', value); // Update the show.name filter. Now our table will filter and show only the rows which have a matching value\r\n    setFilterInput(value);\r\n  };\r\n  return (\r\n    <Container>\r\n      <h4 className='pt-4 pb-5'>\"Tax\"</h4>\r\n      <div className='d-flex w-60 ml-3  mb-3 filters'>\r\n        <div className='d-flex flex-column mr-3 w-100'>\r\n          <span>HSN Code</span>\r\n          <InputGroup size='sm'>\r\n            <Input\r\n              value={filterInput}\r\n              onChange={handleFilterChange}\r\n              placeholder='Search by HSN Code'\r\n            />\r\n            <InputGroupAddon addonType='append'>\r\n              <InputGroupText>\r\n                <FontAwesomeIcon className='icon' icon={faSearch} />\r\n              </InputGroupText>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n        </div>\r\n        <div className='d-flex flex-column mr-3 w-100'>\r\n          <span>State</span>\r\n          <InputGroup size='sm'>\r\n            <Input\r\n              type='select'\r\n              name='select'\r\n              onChange={(e) => handleSelectFilterChange(e)}\r\n              id='exampleSelect'>\r\n              <option value=''>All</option>\r\n              {['Transition Value', 'Per-Unit'].map((data, index) => {\r\n                return (\r\n                  <option value={data} key={index}>\r\n                    {data}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Input>\r\n          </InputGroup>\r\n        </div>\r\n      </div>\r\n      <TableTax columns={columns} data={data} />\r\n      {/* <TableC\r\n      columns={columns}\r\n      searchTitle='HSN Code'\r\n      searchPlaceHolder='Search HSN Code'\r\n      dropdownList={['Transition Value', 'Per-Unit']}\r\n      data={data}\r\n      heading='TAX'\r\n      filter='code'\r\n      dropfilter=''\r\n    /> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Tax;\r\n"]},"metadata":{},"sourceType":"module"}